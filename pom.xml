<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  
  <groupId>uk.ac.rothamsted.knetminer</groupId>
  <artifactId>knetminer-common</artifactId>
  <version>2.0.1-SNAPSHOT</version>
  <packaging>pom</packaging>
  
  <name>knetminer-common (common POM for Knetminer projects)</name>
  
	<properties>
		<maven.compiler.source>11</maven.compiler.source>
		<maven.compiler.target>${maven.compiler.source}</maven.compiler.target>
		<java.version>${maven.compiler.source}</java.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
				
		<jutils.version>10.0</jutils.version>
		<rdfutils.version>3.0</rdfutils.version>		
		
		<springframework.version>5.3.14</springframework.version>


		<!-- 
			These are for the neo4j server plug-in. 
			We define them via variables, cause sometimes it's useful to override them.
			We also use non-standard ports in order to avoid clashes with running instances. 
		-->
		<neo4j.server.version>4.4.1</neo4j.server.version>
		<neo4j.server.boltPort>17690</neo4j.server.boltPort>
		<neo4j.server.httpPort>17490</neo4j.server.httpPort>
		<neo4j.server.deleteDb>true</neo4j.server.deleteDb>
		<neo4j.server.password>test</neo4j.server.password>
		<neo4j.server.serverReadyAttempts>60</neo4j.server.serverReadyAttempts>
		
		<!-- These are defined as properties, so that you can reuse/override them, eg, in a profile -->
		<knetminer.mvnrepo.rel.id>knetminer-releases</knetminer.mvnrepo.rel.id>
		<knetminer.mvnrepo.rel.name>Internal Releases</knetminer.mvnrepo.rel.name>
		<knetminer.mvnrepo.rel.url>https://knetminer.com/artifactory/repository/maven-releases</knetminer.mvnrepo.rel.url>
		
		<knetminer.mvnrepo.snapshots.id>knetminer-snapshots</knetminer.mvnrepo.snapshots.id>
		<knetminer.mvnrepo.snapshots.name>Internal Snapshots</knetminer.mvnrepo.snapshots.name>
		<knetminer.mvnrepo.snapshots.url>https://knetminer.com/artifactory/repository/maven-snapshots</knetminer.mvnrepo.snapshots.url>
			
	</properties>  

	<repositories>
	  <repository>
	  	<!-- 
	  		As usually, this points to both releases and snapshots and caches Maven Central
	  		plus other repos.
	  	 -->
			<id>knetminer-repo</id>
			<name>Knetminer Unified Repository</name>
			<url>https://knetminer.com/artifactory/repository/maven-public</url>
			<snapshots><enabled>true</enabled></snapshots>
			<releases><enabled>true</enabled></releases>
	  </repository>
	</repositories>
	
	<pluginRepositories>
		<pluginRepository>
			<id>knetminer-plugin-repo</id>
			<name>Knetminer Unified Repository</name>
			<url>https://knetminer.com/artifactory/repository/maven-public</url>
			<snapshots><enabled>true</enabled></snapshots>
			<releases><enabled>true</enabled></releases>
		</pluginRepository>
	</pluginRepositories>
	
	<distributionManagement>
				
	  <repository>
			<id>${knetminer.mvnrepo.rel.id}</id>
			<name>${knetminer.mvnrepo.rel.name}</name>
			<url>${knetminer.mvnrepo.rel.url}</url>
	  </repository>
	  <snapshotRepository>
			<id>${knetminer.mvnrepo.snapshots.id}</id>
			<name>${knetminer.mvnrepo.snapshots.name}</name>
			<url>${knetminer.mvnrepo.snapshots.url}</url>
	  </snapshotRepository>
	  
	</distributionManagement>				


	<!-- 
		These are general packages, which are in use in multiple projects and typically
		require that their dependency is updated simultaneously.
		
		If you choose to depend on this packages (ie, you name them in your descendant POM, without
		assigning a version, you've to accept that versions are auto-updated when this POM is updated. 
	-->
	<dependencyManagement>
		<dependencies>
		
			<dependency>
				<groupId>uk.ac.ebi</groupId>
				<artifactId>jutils</artifactId>
				<version>${jutils.version}</version>
			</dependency>
			
			<dependency>
				<groupId>uk.ac.ebi</groupId>
				<artifactId>jutils-io</artifactId>
				<version>${jutils.version}</version>
			</dependency>
			
		  <dependency>
		    <groupId>junit</groupId>
		    <artifactId>junit</artifactId>
		    <version>4.13.1</version>
		    <scope>test</scope>
		  </dependency>
			
			<dependency>
      	<groupId>org.apache.logging.log4j</groupId>
      	<artifactId>log4j-bom</artifactId>
      	<version>2.16.0</version>
      	<scope>import</scope>
      	<type>pom</type>
    	</dependency>
    	
		  <!-- You need this if you want to YAML-config log4j2 -->
			<dependency>
				<groupId>com.fasterxml.jackson.dataformat</groupId>
				<artifactId>jackson-dataformat-yaml</artifactId>
				<version>2.10.5</version>
			</dependency>
			<dependency>
			  <groupId>com.fasterxml.jackson.core</groupId>
			  <artifactId>jackson-databind</artifactId>
			  <version>2.10.5.1</version>
			</dependency>
			
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-core</artifactId>
				<version>${springframework.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-context</artifactId>
				<version>${springframework.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-beans</artifactId>
				<version>${springframework.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-web</artifactId>
				<version>${springframework.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-webmvc</artifactId>
				<version>${springframework.version}</version>
			</dependency>
			
      <dependency>
        <groupId>org.neo4j.driver</groupId>
        <artifactId>neo4j-java-driver</artifactId>
        <version>4.4.2</version>
      </dependency>			
			
			<!-- Needed in Java >= 11 -->	  
			<dependency>
				<groupId>javax.annotation</groupId>
				<artifactId>javax.annotation-api</artifactId>
				<version>1.3.2</version>
			</dependency>
			
			<dependency>
				<groupId>commons-io</groupId>
				<artifactId>commons-io</artifactId>
				<version>2.8.0</version>
			</dependency>
			
			<dependency>
			  <groupId>com.google.guava</groupId>
			  <artifactId>guava</artifactId>
				<version>30.1.1-jre</version>
			</dependency>		
			
			<dependency>
				<groupId>com.machinezoo.noexception</groupId>
				<artifactId>noexception</artifactId>
				<version>1.3.2</version>
			</dependency>

			<!-- Utilities for RDF and the Jena RDF framework -->
	    <dependency>
	      <groupId>info.marcobrandizi</groupId>
	      <artifactId>rdfutils-core</artifactId>
	      <version>${rdfutils.version}</version>
	    </dependency>
  		<dependency>
				<groupId>info.marcobrandizi</groupId>
				<artifactId>rdfutils-jena</artifactId>
				<version>${rdfutils.version}</version>
  		</dependency>  		
  		
			<dependency>
				<groupId>info.picocli</groupId>
				<artifactId>picocli</artifactId>
				<version>4.6.2</version>
			</dependency>
			
		</dependencies>
			
	</dependencyManagement>
	
		
	<build>
		<!-- See the notes above about <dependencyManagement> -->
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven 
				build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.mojo</groupId>
										<artifactId>exec-maven-plugin</artifactId>
										<versionRange>[1.0,)</versionRange>
										<goals>
											<goal>exec</goal>
										</goals>
										</pluginExecutionFilter>
										<action>
											<ignore />
										</action>
								</pluginExecution>
								<pluginExecution>
										<pluginExecutionFilter>
							        <groupId>org.codehaus.mojo</groupId>
							        <artifactId>properties-maven-plugin</artifactId>
											<versionRange>[1.0,)</versionRange>
											<goals>
												<goal>set-system-properties</goal>
											</goals>
										</pluginExecutionFilter>
										<action>
											<ignore />
										</action>
								</pluginExecution>												
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
				
			  <!-- 
					A small plug-in that starts/stops Neo4j in a Maven build lifecycle. 
					
					1.0.1 is the official version that integrated our improvements at
					at https://github.com/Rothamsted/neo4j-server-maven-plugin 
			  -->
	      <plugin>
			    <groupId>com.github.harti2006</groupId>
				  <artifactId>neo4j-server-maven-plugin</artifactId>
				  <version>2.0</version>
					<configuration>
						<version>${neo4j.server.version}</version>
						<port>${neo4j.server.httpPort}</port>
						<boltPort>${neo4j.server.boltPort}</boltPort>
						<deleteDb>${neo4j.server.deleteDb}</deleteDb>
						<serverReadyAttempts>${neo4j.server.serverReadyAttempts}</serverReadyAttempts>
						<password>${neo4j.server.password}</password>
					</configuration>
					<executions>
						<execution>
							<id>start-neo4j-server</id>
							<goals><goal>start</goal></goals>
						</execution>
						<execution>
							<id>stop-neo4j-server</id>
							<goals><goal>stop</goal></goals>
						</execution>
					</executions>		        
	      </plugin>
	      
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-failsafe-plugin</artifactId>
					<!-- 
						This happens in M5: https://issues.apache.org/jira/browse/SUREFIRE-1809
						They've a workaround, but it's quicker to wait for M6 
					-->
					<version>3.0.0-M4</version>
					<configuration>
						<trimStackTrace>false</trimStackTrace>
			      <properties>
			        <property>
			        	<!-- Prints out spaces and test name before/after every test method and automatically -->
			          <name>listener</name>
			          <value>uk.ac.ebi.utils.test.junit.TestOutputDecorator</value>
			        </property>
			       </properties>
					</configuration>
					<executions>
						<execution>
							<phase>integration-test</phase>
							<goals><goal>integration-test</goal></goals>
						</execution>
				    <execution>
			        <id>verify</id>
			        <phase>verify</phase>
			        <goals><goal>verify</goal></goals>
				    </execution>
					</executions>
			    <dependencies>
			    	<dependency>
						  <groupId>uk.ac.ebi</groupId>
						  <artifactId>jutils</artifactId>
							<version>${jutils.version}</version>
			    	</dependency>
			    </dependencies>
				</plugin>	
				
			  <plugin>
			    <groupId>org.apache.maven.plugins</groupId>
			    <artifactId>maven-surefire-plugin</artifactId>
			    <!-- TODO: the jutils dependency doesn't work with ver >2.19.1,
			         I've reported it: https://issues.apache.org/jira/browse/SUREFIRE-1917 
			    		
			    		 A workaround to using latest versions is to 
			    		 include jutils as a dependency in your project
			    -->
			    <version>3.0.0-M5</version>

			    <configuration>
			      <properties>
			        <property>
			        	<!-- Prints out spaces and test name before/after every test method and automatically -->
			          <name>listener</name>
			          <value>uk.ac.ebi.utils.test.junit.TestOutputDecorator</value>
			        </property>
			       </properties>
			       <systemProperties>
			       	<project.build.directory>${project.build.directory}</project.build.directory>
			       </systemProperties>
			    </configuration>
			    <dependencies>
			    	<dependency>
						  <groupId>uk.ac.ebi</groupId>
						  <artifactId>jutils</artifactId>
							<version>${jutils.version}</version>
			    	</dependency>
			    </dependencies>
			  </plugin>
		  				
				<plugin>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>3.3.0</version>
					<configuration>
						<archiverConfig>
							<fileMode>0755</fileMode>
							<directoryMode>0755</directoryMode>
							<defaultDirectoryMode>0755</defaultDirectoryMode>
						</archiverConfig>
					</configuration>
				</plugin>
				
	  		<plugin>
	  			<artifactId>maven-dependency-plugin</artifactId>
	  			<version>3.1.2</version>
				</plugin>
								  				      	        				
			</plugins>		
		</pluginManagement>
	</build>
		
	<modules>
			<module>knetminer-archetype</module>
	</modules>
</project>
